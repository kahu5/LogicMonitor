{
  "collectionMethod": "script",
  "datapoints": [
    {
      "max": "",
      "triggerInterval": 1,
      "dataType": 7,
      "maxDigits": 4,
      "description": "time since software last compiled in days",
      "interpretMethod": "namevalue",
      "threshold": "> 365",
      "interpretExpr": "compiledAge",
      "type": "gauge",
      "clearInterval": 1,
      "originId": "NtNVjO3bQgCmQAPOxwr3Ew",
      "useValue": "output",
      "min": "",
      "name": "compiledAge",
      "noData": "Do not trigger an alert"
    },
    {
      "max": "",
      "triggerInterval": 0,
      "dataType": 7,
      "maxDigits": 4,
      "interpretMethod": "namevalue",
      "interpretExpr": "maintenanceRelease",
      "type": "gauge",
      "clearInterval": 0,
      "originId": "td9cMYc-RliyLCdnxReFdQ",
      "useValue": "output",
      "min": "",
      "name": "maintenanceRelease",
      "noData": "Do not trigger an alert"
    },
    {
      "max": "",
      "triggerInterval": 0,
      "dataType": 7,
      "maxDigits": 4,
      "interpretMethod": "namevalue",
      "interpretExpr": "major_trainRelease",
      "type": "gauge",
      "clearInterval": 0,
      "originId": "ydQ1nm47Rd61zCmIPgqkCw",
      "useValue": "output",
      "min": "",
      "name": "major_trainRelease",
      "noData": "Trigger warning alert"
    },
    {
      "max": "",
      "triggerInterval": 0,
      "dataType": 7,
      "maxDigits": 4,
      "interpretMethod": "namevalue",
      "interpretExpr": "minorRelease",
      "type": "gauge",
      "clearInterval": 0,
      "originId": "7u4vTjHXT5ii_JEyWmAP4g",
      "useValue": "output",
      "min": "",
      "name": "minorRelease",
      "noData": "Do not trigger an alert"
    }
  ],
  "searchKeywords": "",
  "displayedAs": "Cisco Software",
  "description": "Shows the software version and compiled date",
  "appliesTo": "hasCategory(\"CiscoASA\") && auto.cisco.chassis_model =~ \"ASA\" && (system.sysinfo !~ \"FTD\" && system.sysinfo !~ \"Cisco Firepower Threat Defense\") && ssh.user && ssh.pass",
  "collectionAttrs": {
    "type": "groovy",
    "content": "// import the logicmonitor expect helper class\r\nimport com.santaba.agent.groovyapi.expect.Expect;\r\nimport java.time.*\r\nimport java.time.format.DateTimeFormatter\r\nimport java.time.temporal.ChronoUnit\r\n\r\n// get the hostname and credentials from the device property table\r\nhostname = hostProps.get(\"system.hostname\");\r\nuserid = hostProps.get(\"ssh.user\");\r\npasswd = hostProps.get(\"ssh.pass\");\r\n//passwd = hostProps.get(\"ssh.pass\") ? hostProps.get(\"ssh.pass\") : hostProps.get(\"ssh.enable pass\")\r\n\r\n// initiate an ssh connection to the host using the provided credentials\r\nssh_connection = Expect.open(hostname, userid, passwd, \"lib=sshj\");\r\n\r\n//Enable mode method\r\n//    ssh_connection.expect(\"> \");\r\n//    ssh_connection.send(\"enable 0\\n\");\r\n//    ssh_connection.expect(\"assword:\");\r\n//    ssh_connection.send(passwd + \"\\n\");\r\n\r\n// wait for the cli prompt, which indicates we've connected\r\nssh_connection.expect(\"# \");\r\n\r\n// send a command to show the tomcat log file size, along with the newline [enter] character\r\nssh_connection.send(\"terminal pager 0\\n\");\r\n\r\nssh_connection.expect(\"# \");\r\n\r\nssh_connection.send(\"show version\\n\");\r\n\r\n// wait for the cli prompt to return, which indicates the command has completed\r\nssh_connection.expect(\"# \");\r\n\r\n// capture all the text up to the expected string.\r\ncmd_output = ssh_connection.before();\r\n\r\n// now that we've capture the data we care about lets exit from the cli\r\nssh_connection.send(\"exit\\n\");\r\n\r\n// wait until the external process finishes then close the connection\r\nssh_connection.expectClose();\r\n\r\n// Extract the date string\r\nString dateString = cmd_output.find(/(\\d{2}-\\w{3}-\\d{2})/)\r\n\r\n// Define the date format\r\nDateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd-MMM-yy\")\r\n\r\n// Parse the date string\r\nLocalDate compiledDate = LocalDate.parse(dateString, formatter)\r\n\r\n// Get the current date\r\nLocalDate now = LocalDate.now()\r\n\r\n// Calculate the compliled age in days and output to property and datapoint\r\ndef ageInDays = ChronoUnit.DAYS.between(compiledDate, now) as Integer\r\n\r\nprintln \"auto.cisco.software.compiled=\" +compiledDate\r\nprintln(\"compiledAge:\" + ageInDays)\r\n\r\n//Parse the software version\r\ndef matcher = (cmd_output =~ /(\\d+\\.\\d+)\\((\\d+)\\)(\\d+)/)\r\n\r\n// Assign the extracted parts to variables\r\ndef version = matcher[0][1] as Double\r\ndef numberInParentheses = matcher[0][2] as Integer\r\ndef lastNumber = matcher[0][3] as Integer\r\n\r\n\r\nprintln \"major_trainRelease:\" + version\r\nprintln \"minorRelease:\" + numberInParentheses\r\nprintln \"maintenanceRelease:\" + lastNumber\r\n\r\n// return with a response code that indicates we ran successfully\r\nreturn (0);"
  },
  "type": 0,
  "technicalNotes": "",
  "useWildValueAsUniqueIdentifier": false,
  "version": 1702926788,
  "registryMetadata": {
    "currentUuid": "rzKEO-tVQOmtrBnFOEAqXg",
    "originalUuid": "rzKEO-tVQOmtrBnFOEAqXg",
    "locatorId": "",
    "authorCompanyUuid": "82eee13d-ea07-4940-9823-f96d2bf796e2",
    "registryVersion": "1.0.0",
    "checksum": "0356918fda3f1496c70f727afdde38c1",
    "namespace": "",
    "registryId": ""
  },
  "multiInstance": false,
  "integrationMetadata": {
    "publishedAtMS": 1702926842858,
    "authorCompanyUuid": "82eee13d-ea07-4940-9823-f96d2bf796e2",
    "namespace": "emergeits",
    "registryVersion": "1.0.0",
    "name": "",
    "checksum": "0356918fda3f1496c70f727afdde38c1",
    "registryId": "3793ef36-ce69-4141-a852-e31c707fff6b",
    "isPrivate": true,
    "locator": "Z66JJN",
    "lineageId": "rzKEO-tVQOmtrBnFOEAqXg",
    "status": "SECURITY_REVIEW"
  },
  "name": "Cisco_ASA_Software_Version",
  "collectionInterval": "1h",
  "dataSourceType": 1,
  "group": ""
}